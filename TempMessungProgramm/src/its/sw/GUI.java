/*
 * GUI.java
 *
 * Created on 24.03.2010, 16:59:10
 */
package its.sw;

import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.Socket;
import java.net.UnknownHostException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;

/**
 *
 * @author Oliver Schwahlen
 */
public class GUI extends javax.swing.JFrame implements Runnable{

  Socket client = null;
  private double maxTemp;                                                       // Zum Speichern der maximalen Temperatur
  private double minTemp;                                                       // Zum Speichern der minimalen Temperatur
  private DefaultListModel lstMdlAusgabe;                                       // Listmodel zur Ausgabe der empfangenen Daten
  

  /** Creates new form GUI */
  public GUI() {
    initComponents();
    lstMdlAusgabe = new DefaultListModel();
    lstAusgabe.setModel(lstMdlAusgabe);
  }

  /**
   * Diese Methode sendet ein Byte an den Microkontroller
   * um die Messung zu starten.
   */
  private void sendeDaten(String text) {
    try {
        client = new Socket(txtIPAdresse.getText(),
        Integer.parseInt(txtPort.getText()));
        OutputStream out = client.getOutputStream();
        byte b = 1;                                                             
        out.write(b);                                                           
        out.flush();
    }
    
    catch (UnknownHostException ex) {
        Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
    }
    catch (IOException ex) {
        Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
    }
  }

  /**
   * Diese Methode ist für das Empfangen der Messungsdaten vom Microkontroller
   * verantwortlich. Die empfangenen Daten, aus dem Imputstream, werden in ein
   * Byte-Array eingelesen.
   * Anschließend wird das erste Byte verundet, damit es wieder als "unsigned" 
   * behandelt wird. Das zweite Byte wird nun um 8 Stellen nach links  
   * verschoben.
   * 
   * Im Volgendem wird die Referenzspannung und Offset ausgelesen und die 
   * Temperatur berechnet. Anschließend werden die minimum, maximum und aktuelle
   * Temperatur ermittelt und gesetzt. Die aktuelle Temperatur wird als Value an
   * die Progressbar (das Thermometer) gegeben. Zum Schluss wird der Imputstream
   * wieder geschlossen.
   * 
   * @return
   * @throws TemperaturException 
   */
  private String empfangeDaten() throws TemperaturException {
    String empfang = null;
    try {
      InputStream in = client.getInputStream(); 
     while(in.available() == 0);
      byte[] daten = new byte[2]; 
       in.read(daten);
      int adc = daten[0] & 0xff;
      adc += daten[1]<<8;
      
      double uRef = Double.parseDouble(uRefURef.getText());
      double uOffset = Double.parseDouble(offsetURef.getText());
      double totalRef = uRef + uOffset;
      
      
      double adcD =adc * totalRef; 
     
      double uSensorGerundet = adc *totalRef /1000.;
      uSensorGerundet =Math.round(uSensorGerundet*10000.)/10000.;
      String uSensor = ""+uSensorGerundet; 
      uSensorUbat.setText(uSensor);
     
      double gerundet = adcD /1000.;
      gerundet = (gerundet-1.375)/0.0225; //Berechnen der tatsächlichen Temperatur.
      gerundet =Math.round(gerundet*10000.)/10000.;
      
      int maximum = (int)gerundet;
      jProgressBarTemp.setMaximum(100);
      jProgressBarTemp.setValue(maximum);
      empfang = ""+gerundet;
      
        if (maxTemp <= gerundet) {
            maxTemp = gerundet;
        }
        maximaleTemp.setText(""+maxTemp);
        
        if (minTemp >= gerundet) {
            minTemp = gerundet;
        }
        minimaleTemp.setText(""+minTemp);
      
      
      
      in.close();
      client.close();
    } catch (UnknownHostException ex) {
      Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
    } catch (IOException ex) {
      Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
    }
    aktuelleTemp.setText(empfang);
    return empfang;
  }



  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtIPAdresse = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtPort = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        uRefURef = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        offsetURef = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        mehrfachMessung = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstAusgabe = new javax.swing.JList();
        messungLoeschen = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jProgressBarTemp = new javax.swing.JProgressBar();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        uSensorUbat = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        beenden = new javax.swing.JButton();
        einzelMessung = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        aktuelleTemp = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        minimaleTemp = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        maximaleTemp = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        mehrfachMessungSpinner = new javax.swing.JSpinner();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel5 = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        txtfSleepTime = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Temp-Messung über AD 22100KT, ADC µC und XPort");
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Eingabe"));

        jLabel2.setText("IP-Adresse:");

        txtIPAdresse.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtIPAdresse.setText("10.8.1.154");
        txtIPAdresse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIPAdresseActionPerformed(evt);
            }
        });

        jLabel3.setText("Port:");

        txtPort.setText("10001");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtIPAdresse)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtPort, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel2)
                .addComponent(txtIPAdresse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(txtPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel3))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("URef von ADC ATmega"));

        jLabel5.setText("URef:");

        uRefURef.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        uRefURef.setText("2.4");
        uRefURef.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uRefURefActionPerformed(evt);
            }
        });

        jLabel7.setText("V");

        jLabel8.setText("V");

        offsetURef.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        offsetURef.setText("0.0");
        offsetURef.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                offsetURefActionPerformed(evt);
            }
        });

        jLabel6.setText("Offset:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(offsetURef, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(9, 9, 9)
                        .addComponent(uRefURef, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(uRefURef, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(offsetURef, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        mehrfachMessung.setText("Mehrfach-Messung");
        mehrfachMessung.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mehrfachMessungActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Messung"));

        jScrollPane1.setViewportView(lstAusgabe);

        messungLoeschen.setText("Löschen");
        messungLoeschen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                messungLoeschenActionPerformed(evt);
            }
        });

        jLabel13.setText("°C");

        jProgressBarTemp.setMaximum(50);
        jProgressBarTemp.setMinimum(-10);
        jProgressBarTemp.setOrientation(1);

        jLabel1.setText("50");

        jLabel4.setText("40");

        jLabel11.setText("30");

        jLabel12.setText("20");

        jLabel15.setText("10");

        jLabel21.setText("0");

        jLabel22.setText("-10");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(messungLoeschen, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jProgressBarTemp, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel1)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12)
                            .addComponent(jLabel15)
                            .addComponent(jLabel22))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel13))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel21))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel11)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel12)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel15)
                                        .addGap(4, 4, 4)
                                        .addComponent(jLabel21)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel22))
                                    .addComponent(jProgressBarTemp, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(3, 3, 3)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(messungLoeschen)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Ubat von Sensor AD 22100 KT"));

        jLabel9.setText("USensor:");

        uSensorUbat.setEditable(false);
        uSensorUbat.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        uSensorUbat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uSensorUbatActionPerformed(evt);
            }
        });

        jLabel10.setText("V");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(uSensorUbat, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(uSensorUbat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addGap(0, 6, Short.MAX_VALUE))
        );

        beenden.setText("Beenden");
        beenden.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                beendenActionPerformed(evt);
            }
        });

        einzelMessung.setText("Einzel-Messung");
        einzelMessung.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                einzelMessungActionPerformed(evt);
            }
        });

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Messergebniss"));

        jLabel14.setText("Aktuelle Temp:");

        aktuelleTemp.setEditable(false);
        aktuelleTemp.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        aktuelleTemp.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        aktuelleTemp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aktuelleTempActionPerformed(evt);
            }
        });

        jLabel16.setText("Minimale Temp:");

        minimaleTemp.setEditable(false);
        minimaleTemp.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        minimaleTemp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minimaleTempActionPerformed(evt);
            }
        });

        jLabel18.setText("Maximale Temp:");

        maximaleTemp.setEditable(false);
        maximaleTemp.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        maximaleTemp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maximaleTempActionPerformed(evt);
            }
        });

        jLabel17.setText("°C");

        jLabel19.setText("°C");

        jLabel20.setText("°C");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(aktuelleTemp, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel17))
                    .addComponent(jLabel14)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(minimaleTemp, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel19))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel18)
                            .addComponent(maximaleTemp, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel20)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(aktuelleTemp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel16)
                .addGap(3, 3, 3)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(minimaleTemp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addComponent(jLabel18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(maximaleTemp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        aktuelleTemp.getAccessibleContext().setAccessibleName("");
        aktuelleTemp.getAccessibleContext().setAccessibleDescription("");

        mehrfachMessungSpinner.setModel(new javax.swing.SpinnerNumberModel(0, 0, 99, 1));
        mehrfachMessungSpinner.setName(""); // NOI18N

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Sleep-Time"));

        jLabel23.setText("Thread-Wartezeit: ");

        txtfSleepTime.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtfSleepTime.setText("5");

        jLabel24.setText("Sek.");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jLabel23)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtfSleepTime, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel24)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel23)
                .addComponent(txtfSleepTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel24))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(beenden, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(einzelMessung, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mehrfachMessung)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mehrfachMessungSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(einzelMessung)
                    .addComponent(mehrfachMessung)
                    .addComponent(mehrfachMessungSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(beenden))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

  private void mehrfachMessungActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mehrfachMessungActionPerformed
    starteMehrfachmessung();
  }//GEN-LAST:event_mehrfachMessungActionPerformed

    private void txtIPAdresseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIPAdresseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIPAdresseActionPerformed

    private void uRefURefActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uRefURefActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_uRefURefActionPerformed

    private void offsetURefActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_offsetURefActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_offsetURefActionPerformed

    private void uSensorUbatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uSensorUbatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_uSensorUbatActionPerformed

    private void beendenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_beendenActionPerformed
    System.exit(0);                                                             // Beendet das Programm.
    }//GEN-LAST:event_beendenActionPerformed

    private void messungLoeschenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_messungLoeschenActionPerformed
    lstMdlAusgabe.clear();                                                      // Löscht die augegebenen Messdaten bzw. Temperaturen.
    }//GEN-LAST:event_messungLoeschenActionPerformed

    private void einzelMessungActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_einzelMessungActionPerformed
    starteEinfachmessung();
    }//GEN-LAST:event_einzelMessungActionPerformed

    private void aktuelleTempActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aktuelleTempActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_aktuelleTempActionPerformed

    private void minimaleTempActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minimaleTempActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_minimaleTempActionPerformed

    private void maximaleTempActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maximaleTempActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_maximaleTempActionPerformed

  /**
   * @param args the command line arguments
   */
  public static void main(String[] args) {
    java.awt.EventQueue.invokeLater(new Runnable() {

      public void run() {
        new GUI().setVisible(true);
      }
    });
  }
  
  /**
   * Diese Methode dient zum Anzeigen der jeweiligen TemperaturException.
   * 
   * @param frame
   * @param ex 
   */
    public void showExceptionMessage(JFrame frame, TemperaturException ex){
        JOptionPane.showMessageDialog(frame, ex.getMessage());
    }
    
    /**
     * Mit dieser Methode wird die Einfachmessung "angestoßen".
     */
    public void starteEinfachmessung(){
            
        sendeDaten(txtIPAdresse.getText());
      try {
          lstMdlAusgabe.addElement(empfangeDaten()); 
      } catch (TemperaturException ex) {
          Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
          showExceptionMessage(this, ex);
      }
    }
    
    /**
     * Mit dieser Methode wird die Mehrfachmessung gestartet, in dem ein neue 
     * Thread mit dem Objekt der Klasse GUI erstellt und durch den Aufruf 
     * der Methode start(); gestartet wird. 
     * Weiter geht es in der Methode run();, welche durch das Interface Runnable 
     * implementiert wurde.
     */
    public void starteMehrfachmessung(){
              
      GUI g = new GUI();
      Thread t1 = new Thread(g);
      t1.start();
    }

  //<editor-fold defaultstate="collapsed" desc="Standart Getter- und Setter-Methoden">
    /**
     * @return the maxTemp
     */
    public double getMaxTemp() {
        return maxTemp;
    }
    
    /**
     * @param maxTemp the maxTemp to set
     */
    public void setMaxTemp(double maxTemp) {
        this.maxTemp = maxTemp;
    }
    
    /**
     * @return the minTemp
     */
    public double getMinTemp() {
        return minTemp;
    }
    
    /**
     * @param minTemp the minTemp to set
     */
    public void setMinTemp(double minTemp) {
        this.minTemp = minTemp;
    }
//</editor-fold>

    /**
     * In dieser Methode wird der gestartete Thread für die Mehrfachmessung 
     * behandelt. Wie oft die Mehrfachmessung durchlaufen werden soll, 
     * wird über den Spinner "mehrfachMessungSpinner" ausgelesen.
     * Über das Textfeld "txtfSleepTime" kann die Intervallzeit eingestellt werden.
     * Diese bestimmt, wie lange der Thread schlafen gelegt wird.
     */
    @Override
    public void run() {
        
    Object h = mehrfachMessungSpinner.getValue();
    String j= h.toString();
    int k = Integer.parseInt(j);
      for (int i = 0; i <k; i++) {
          
      long sekunden = Long.parseLong(txtfSleepTime.getText());
      long millis = sekunden * 100;
        try {
            Thread.sleep(millis);
        } catch (InterruptedException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        
      sendeDaten(txtIPAdresse.getText());
        try {
            lstMdlAusgabe.addElement(empfangeDaten());  
        } catch (TemperaturException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
            showExceptionMessage(this, ex);
        }
    
      }
    }
  
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField aktuelleTemp;
    private javax.swing.JButton beenden;
    private javax.swing.JButton einzelMessung;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JProgressBar jProgressBarTemp;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JList lstAusgabe;
    private javax.swing.JTextField maximaleTemp;
    private javax.swing.JButton mehrfachMessung;
    private javax.swing.JSpinner mehrfachMessungSpinner;
    private javax.swing.JButton messungLoeschen;
    private javax.swing.JTextField minimaleTemp;
    private javax.swing.JTextField offsetURef;
    private javax.swing.JTextField txtIPAdresse;
    private javax.swing.JTextField txtPort;
    private javax.swing.JTextField txtfSleepTime;
    private javax.swing.JTextField uRefURef;
    private javax.swing.JTextField uSensorUbat;
    // End of variables declaration//GEN-END:variables

}
